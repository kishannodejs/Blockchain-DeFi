{
    "contractName": "DeFi",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_symbol",
                    "type": "string"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_tokenAmnt",
                    "type": "uint256"
                }
            ],
            "name": "borrowETH",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getBal",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lendETH",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmnt\",\"type\":\"uint256\"}],\"name\":\"borrowETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"borrowETH(uint256)\":{\"details\":\"user have to borrow ETH in the multiple of 100 NeoToken\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"lendETH()\":{\"details\":\"user have to lend minimum 1 ETH\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"Defi contract where user Lend and Borrow ETH in exchange to NeoToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrowETH(uint256)\":{\"notice\":\"User can borrow their ETH in Exchange of NeoToken.\"},\"getBal()\":{\"notice\":\"User can get the balance of DeFi contract ETH balance.\"},\"lendETH()\":{\"notice\":\"User can lend their ETH in Exchange of NeoToken - 1 ETH == 100 NeoToken\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Neosoft/Desktop/NeoSoft/Assignments/DeFi/Lend_Borrow/contracts/DeFi.sol\":\"DeFi\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/Neosoft/Desktop/NeoSoft/Assignments/DeFi/Lend_Borrow/ERC20/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"c:/Users/Neosoft/Desktop/NeoSoft/Assignments/DeFi/Lend_Borrow/ERC20/ERC20.sol\":{\"keccak256\":\"0x4176d07813874040b30ccef8e2ddea9b20bbd8ba7a0b4c40bdbdc43f507940bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b3969b27e4953029831abccef9bf1be392c9f9c4a08ee41448dcf151040465\",\"dweb:/ipfs/QmWyuM9rRy1zUZGspxfXkiQDNsTkCWwgLoCJhUG2n65seN\"]},\"c:/Users/Neosoft/Desktop/NeoSoft/Assignments/DeFi/Lend_Borrow/ERC20/IERC20.sol\":{\"keccak256\":\"0x1f32a75186bb2aaa1f9a4c13a4bf5a603b4af5dc2dfd9c8f71483b34f7f556c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9460ab52630c472d623084d34ab505eb4abfe9d0fdb44bfe46046e3fdb38c93\",\"dweb:/ipfs/QmasRT1jYUAsRWDSvt4mfTfZH1jdP8uvUUzvsRWdRDN3uS\"]},\"c:/Users/Neosoft/Desktop/NeoSoft/Assignments/DeFi/Lend_Borrow/contracts/DeFi.sol\":{\"keccak256\":\"0xe607a7aed32d202388620f69790b85096bb75c1c626c7ad4ff9e10a6363a4126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77feebf876c641e3636b0affb172c7a7c9e020ca3109a3acd661a7415a488899\",\"dweb:/ipfs/QmRJJjxz8ZQPUpKWTgAJ6HcdjjTv9xS37a1kRPuH4hmReV\"]},\"c:/Users/Neosoft/Desktop/NeoSoft/Assignments/DeFi/Lend_Borrow/contracts/NeoToken.sol\":{\"keccak256\":\"0xbfccdce74d46d0a0cf33e46c7a54089bad6af9de458014bcecebcbfdc7982b51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33052f34bbb890c6a49cb29778289683fd47ccb3942e95a8fd679b1c2932626\",\"dweb:/ipfs/QmceYtAjHpKrDjpP1otiHCgjAn9gHMLCFiYaGMJkGoTFbe\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b5060405162000f7338038062000f73833981016040819052620000349162000142565b8181818160036200004683826200023b565b5060046200005582826200023b565b5050600580546001600160a01b0319163317905550620003079350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009d57600080fd5b81516001600160401b0380821115620000ba57620000ba62000075565b604051601f8301601f19908116603f01168101908282118183101715620000e557620000e562000075565b816040528381526020925086838588010111156200010257600080fd5b600091505b8382101562000126578582018301518183018401529082019062000107565b83821115620001385760008385830101525b9695505050505050565b600080604083850312156200015657600080fd5b82516001600160401b03808211156200016e57600080fd5b6200017c868387016200008b565b935060208501519150808211156200019357600080fd5b50620001a2858286016200008b565b9150509250929050565b600181811c90821680620001c157607f821691505b602082108103620001e257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023657600081815260208120601f850160051c81016020861015620002115750805b601f850160051c820191505b8181101562000232578281556001016200021d565b5050505b505050565b81516001600160401b0381111562000257576200025762000075565b6200026f81620002688454620001ac565b84620001e8565b602080601f831160018114620002a757600084156200028e5750858301515b600019600386901b1c1916600185901b17855562000232565b600085815260208120601f198616915b82811015620002d857888601518255948401946001909101908401620002b7565b5085821015620002f75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c5c80620003176000396000f3fe6080604052600436106100e85760003560e01c806370a082311161008a578063a457c2d711610059578063a457c2d714610263578063a9059cbb14610283578063d16d3df1146102a3578063dd62ed3e146102ab57600080fd5b806370a08231146101d65780637b2af6251461020c57806395d89b411461022e578063a0712d681461024357600080fd5b806323b872dd116100c657806323b872dd1461016757806325caa26214610187578063313ce5671461019a57806339509351146101b657600080fd5b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610148575b600080fd5b3480156100f957600080fd5b506101026102cb565b60405161010f9190610a1c565b60405180910390f35b34801561012457600080fd5b50610138610133366004610a8d565b61035d565b604051901515815260200161010f565b34801561015457600080fd5b506002545b60405190815260200161010f565b34801561017357600080fd5b50610138610182366004610ab7565b610375565b34801561019357600080fd5b5047610159565b3480156101a657600080fd5b506040516012815260200161010f565b3480156101c257600080fd5b506101386101d1366004610a8d565b610399565b3480156101e257600080fd5b506101596101f1366004610af3565b6001600160a01b031660009081526020819052604090205490565b34801561021857600080fd5b5061022c610227366004610b15565b6103bb565b005b34801561023a57600080fd5b506101026104cd565b34801561024f57600080fd5b5061022c61025e366004610b15565b6104dc565b34801561026f57600080fd5b5061013861027e366004610a8d565b6104e9565b34801561028f57600080fd5b5061013861029e366004610a8d565b610564565b61022c610572565b3480156102b757600080fd5b506101596102c6366004610b2e565b6105f6565b6060600380546102da90610b61565b80601f016020809104026020016040519081016040528092919081815260200182805461030690610b61565b80156103535780601f1061032857610100808354040283529160200191610353565b820191906000526020600020905b81548152906001019060200180831161033657829003601f168201915b5050505050905090565b60003361036b818585610621565b5060019392505050565b600033610383858285610745565b61038e8585856107b9565b506001949350505050565b60003361036b8185856103ac83836105f6565b6103b69190610bb1565b610621565b3360009081526020819052604090205481908111156104215760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e20616d6f756e74206c657373207468616e2031303000000000000060448201526064015b60405180910390fd5b61042c606482610bdf565b156104795760405162461bcd60e51b815260206004820181905260248201527f546f6b656e206d75737420626520696e206d756c7469706c65206f66203130306044820152606401610418565b6104833083610564565b50600061049783662386f26fc10000610bf3565b604051909150339082156108fc029083906000818181858888f193505050501580156104c7573d6000803e3d6000fd5b50505050565b6060600480546102da90610b61565b6104e6338261095d565b50565b600033816104f782866105f6565b9050838110156105575760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610418565b61038e8286868403610621565b60003361036b8185856107b9565b670de0b6b3a76400003410156105d85760405162461bcd60e51b815260206004820152602560248201527f4d696e696d756d206c656e6420616d6f756e742073686f756c6420626520312060448201526432ba3432b960d91b6064820152608401610418565b60006105eb662386f26fc1000034610c12565b90506104e6816104dc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610418565b6001600160a01b0382166106e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610418565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061075184846105f6565b905060001981146104c757818110156107ac5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610418565b6104c78484848403610621565b6001600160a01b03831661081d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610418565b6001600160a01b03821661087f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610418565b6001600160a01b038316600090815260208190526040902054818110156108f75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610418565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104c7565b6001600160a01b0382166109b35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610418565b80600260008282546109c59190610bb1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610a4957858101830151858201604001528201610a2d565b81811115610a5b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a8857600080fd5b919050565b60008060408385031215610aa057600080fd5b610aa983610a71565b946020939093013593505050565b600080600060608486031215610acc57600080fd5b610ad584610a71565b9250610ae360208501610a71565b9150604084013590509250925092565b600060208284031215610b0557600080fd5b610b0e82610a71565b9392505050565b600060208284031215610b2757600080fd5b5035919050565b60008060408385031215610b4157600080fd5b610b4a83610a71565b9150610b5860208401610a71565b90509250929050565b600181811c90821680610b7557607f821691505b602082108103610b9557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bc457610bc4610b9b565b500190565b634e487b7160e01b600052601260045260246000fd5b600082610bee57610bee610bc9565b500690565b6000816000190483118215151615610c0d57610c0d610b9b565b500290565b600082610c2157610c21610bc9565b50049056fea264697066735822122094f0ab4bc1c3d1bc11dbc92183a5d30a0ac1cc08fd3b3870d839358430b8b37f64736f6c634300080f0033",
    "deployedBytecode": "6080604052600436106100e85760003560e01c806370a082311161008a578063a457c2d711610059578063a457c2d714610263578063a9059cbb14610283578063d16d3df1146102a3578063dd62ed3e146102ab57600080fd5b806370a08231146101d65780637b2af6251461020c57806395d89b411461022e578063a0712d681461024357600080fd5b806323b872dd116100c657806323b872dd1461016757806325caa26214610187578063313ce5671461019a57806339509351146101b657600080fd5b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610148575b600080fd5b3480156100f957600080fd5b506101026102cb565b60405161010f9190610a1c565b60405180910390f35b34801561012457600080fd5b50610138610133366004610a8d565b61035d565b604051901515815260200161010f565b34801561015457600080fd5b506002545b60405190815260200161010f565b34801561017357600080fd5b50610138610182366004610ab7565b610375565b34801561019357600080fd5b5047610159565b3480156101a657600080fd5b506040516012815260200161010f565b3480156101c257600080fd5b506101386101d1366004610a8d565b610399565b3480156101e257600080fd5b506101596101f1366004610af3565b6001600160a01b031660009081526020819052604090205490565b34801561021857600080fd5b5061022c610227366004610b15565b6103bb565b005b34801561023a57600080fd5b506101026104cd565b34801561024f57600080fd5b5061022c61025e366004610b15565b6104dc565b34801561026f57600080fd5b5061013861027e366004610a8d565b6104e9565b34801561028f57600080fd5b5061013861029e366004610a8d565b610564565b61022c610572565b3480156102b757600080fd5b506101596102c6366004610b2e565b6105f6565b6060600380546102da90610b61565b80601f016020809104026020016040519081016040528092919081815260200182805461030690610b61565b80156103535780601f1061032857610100808354040283529160200191610353565b820191906000526020600020905b81548152906001019060200180831161033657829003601f168201915b5050505050905090565b60003361036b818585610621565b5060019392505050565b600033610383858285610745565b61038e8585856107b9565b506001949350505050565b60003361036b8185856103ac83836105f6565b6103b69190610bb1565b610621565b3360009081526020819052604090205481908111156104215760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e20616d6f756e74206c657373207468616e2031303000000000000060448201526064015b60405180910390fd5b61042c606482610bdf565b156104795760405162461bcd60e51b815260206004820181905260248201527f546f6b656e206d75737420626520696e206d756c7469706c65206f66203130306044820152606401610418565b6104833083610564565b50600061049783662386f26fc10000610bf3565b604051909150339082156108fc029083906000818181858888f193505050501580156104c7573d6000803e3d6000fd5b50505050565b6060600480546102da90610b61565b6104e6338261095d565b50565b600033816104f782866105f6565b9050838110156105575760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610418565b61038e8286868403610621565b60003361036b8185856107b9565b670de0b6b3a76400003410156105d85760405162461bcd60e51b815260206004820152602560248201527f4d696e696d756d206c656e6420616d6f756e742073686f756c6420626520312060448201526432ba3432b960d91b6064820152608401610418565b60006105eb662386f26fc1000034610c12565b90506104e6816104dc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610418565b6001600160a01b0382166106e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610418565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061075184846105f6565b905060001981146104c757818110156107ac5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610418565b6104c78484848403610621565b6001600160a01b03831661081d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610418565b6001600160a01b03821661087f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610418565b6001600160a01b038316600090815260208190526040902054818110156108f75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610418565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104c7565b6001600160a01b0382166109b35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610418565b80600260008282546109c59190610bb1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610a4957858101830151858201604001528201610a2d565b81811115610a5b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a8857600080fd5b919050565b60008060408385031215610aa057600080fd5b610aa983610a71565b946020939093013593505050565b600080600060608486031215610acc57600080fd5b610ad584610a71565b9250610ae360208501610a71565b9150604084013590509250925092565b600060208284031215610b0557600080fd5b610b0e82610a71565b9392505050565b600060208284031215610b2757600080fd5b5035919050565b60008060408385031215610b4157600080fd5b610b4a83610a71565b9150610b5860208401610a71565b90509250929050565b600181811c90821680610b7557607f821691505b602082108103610b9557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bc457610bc4610b9b565b500190565b634e487b7160e01b600052601260045260246000fd5b600082610bee57610bee610bc9565b500690565b6000816000190483118215151615610c0d57610c0d610b9b565b500290565b600082610c2157610c21610bc9565b50049056fea264697066735822122094f0ab4bc1c3d1bc11dbc92183a5d30a0ac1cc08fd3b3870d839358430b8b37f64736f6c634300080f0033",
    "sourceMap": "170:1478:13:-:0;;;243:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;317:5;324:7;317:5;324:7;2029:5:11;:13;317:5:13;2029::11;:13;:::i;:::-;-1:-1:-1;2053:7:11;:17;2063:7;2053;:17;:::i;:::-;-1:-1:-1;;349:5:13::1;:18:::0;;-1:-1:-1;;;;;;349:18:13::1;357:10;349:18;::::0;;-1:-1:-1;170:1478:13;;-1:-1:-1;;;;170:1478:13;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:16:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:16;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;2114:545::-;2216:2;2211:3;2208:11;2205:448;;;2252:1;2277:5;2273:2;2266:17;2322:4;2318:2;2308:19;2392:2;2380:10;2376:19;2373:1;2369:27;2363:4;2359:38;2428:4;2416:10;2413:20;2410:47;;;-1:-1:-1;2451:4:16;2410:47;2506:2;2501:3;2497:12;2494:1;2490:20;2484:4;2480:31;2470:41;;2561:82;2579:2;2572:5;2569:13;2561:82;;;2624:17;;;2605:1;2594:13;2561:82;;;2565:3;;;2205:448;2114:545;;;:::o;2835:1352::-;2955:10;;-1:-1:-1;;;;;2977:30:16;;2974:56;;;3010:18;;:::i;:::-;3039:97;3129:6;3089:38;3121:4;3115:11;3089:38;:::i;:::-;3083:4;3039:97;:::i;:::-;3191:4;;3255:2;3244:14;;3272:1;3267:663;;;;3974:1;3991:6;3988:89;;;-1:-1:-1;4043:19:16;;;4037:26;3988:89;-1:-1:-1;;2792:1:16;2788:11;;;2784:24;2780:29;2770:40;2816:1;2812:11;;;2767:57;4090:81;;3237:944;;3267:663;2061:1;2054:14;;;2098:4;2085:18;;-1:-1:-1;;3303:20:16;;;3421:236;3435:7;3432:1;3429:14;3421:236;;;3524:19;;;3518:26;3503:42;;3616:27;;;;3584:1;3572:14;;;;3451:19;;3421:236;;;3425:3;3685:6;3676:7;3673:19;3670:201;;;3746:19;;;3740:26;-1:-1:-1;;3829:1:16;3825:14;;;3841:3;3821:24;3817:37;3813:42;3798:58;3783:74;;3670:201;-1:-1:-1;;;;;3917:1:16;3901:14;;;3897:22;3884:36;;-1:-1:-1;2835:1352:16:o;:::-;170:1478:13;;;;;;",
    "deployedSourceMap": "170:1478:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2148:83:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4572:242;;;;;;;;;;-1:-1:-1;4572:242:11;;;;;:::i;:::-;;:::i;:::-;;;1218:14:16;;1211:22;1193:41;;1181:2;1166:18;4572:242:11;1053:187:16;3217:91:11;;;;;;;;;;-1:-1:-1;3288:12:11;;3217:91;;;1391:25:16;;;1379:2;1364:18;3217:91:11;1245:177:16;5394:295:11;;;;;;;;;;-1:-1:-1;5394:295:11;;;;;:::i;:::-;;:::i;1550:95:13:-;;;;;;;;;;-1:-1:-1;1616:21:13;1550:95;;3076:76:11;;;;;;;;;;-1:-1:-1;3076:76:11;;3142:2;1902:36:16;;1890:2;1875:18;3076:76:11;1760:184:16;6098:270:11;;;;;;;;;;-1:-1:-1;6098:270:11;;;;;:::i;:::-;;:::i;3371:177::-;;;;;;;;;;-1:-1:-1;3371:177:11;;;;;:::i;:::-;-1:-1:-1;;;;;3522:18:11;3490:7;3522:18;;;;;;;;;;;;3371:177;1252:220:13;;;;;;;;;;-1:-1:-1;1252:220:13;;;;;:::i;:::-;;:::i;:::-;;2350:87:11;;;;;;;;;;;;;:::i;278:79:15:-;;;;;;;;;;-1:-1:-1;278:79:15;;;;;:::i;:::-;;:::i;6871:505:11:-;;;;;;;;;;-1:-1:-1;6871:505:11;;;;;:::i;:::-;;:::i;3754:234::-;;;;;;;;;;-1:-1:-1;3754:234:11;;;;;:::i;:::-;;:::i;987:125:13:-;;;:::i;4051:201:11:-;;;;;;;;;;-1:-1:-1;4051:201:11;;;;;:::i;:::-;;:::i;2148:83::-;2185:13;2218:5;2211:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2148:83;:::o;4572:242::-;4691:4;736:10:10;4752:32:11;736:10:10;4768:7:11;4777:6;4752:8;:32::i;:::-;-1:-1:-1;4802:4:11;;4572:242;-1:-1:-1;;;4572:242:11:o;5394:295::-;5525:4;736:10:10;5583:38:11;5599:4;736:10:10;5614:6:11;5583:15;:38::i;:::-;5632:27;5642:4;5648:2;5652:6;5632:9;:27::i;:::-;-1:-1:-1;5677:4:11;;5394:295;-1:-1:-1;;;;5394:295:11:o;6098:270::-;6213:4;736:10:10;6274:64:11;736:10:10;6290:7:11;6327:10;6299:25;736:10:10;6290:7:11;6299:9;:25::i;:::-;:38;;;;:::i;:::-;6274:8;:64::i;1252:220:13:-;637:10;3490:7:11;3522:18;;;;;;;;;;;1308:10:13;;;-1:-1:-1;627:35:13;605:111;;;;-1:-1:-1;;;605:111:13;;3442:2:16;605:111:13;;;3424:21:16;3481:2;3461:18;;;3454:30;3520:28;3500:18;;;3493:56;3566:18;;605:111:13;;;;;;;;;749:16;762:3;749:10;:16;:::i;:::-;:21;727:103;;;;-1:-1:-1;;;727:103:13;;4046:2:16;727:103:13;;;4028:21:16;;;4065:18;;;4058:30;4124:34;4104:18;;;4097:62;4176:18;;727:103:13;3844:356:16;727:103:13;1331:35:::1;1348:4;1355:10;1331:8;:35::i;:::-;-1:-1:-1::0;1377:16:13::1;1396:19;:10:::0;1409:6:::1;1396:19;:::i;:::-;1426:38;::::0;1377;;-1:-1:-1;1434:10:13::1;::::0;1426:38;::::1;;;::::0;1377;;1426::::1;::::0;;;1377;1434:10;1426:38;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1320:152;1252:220:::0;;:::o;2350:87:11:-;2389:13;2422:7;2415:14;;;;;:::i;278:79:15:-;323:26;329:10;341:7;323:5;:26::i;:::-;278:79;:::o;6871:505:11:-;6991:4;736:10:10;6991:4:11;7079:25;736:10:10;7096:7:11;7079:9;:25::i;:::-;7052:52;;7157:15;7137:16;:35;;7115:122;;;;-1:-1:-1;;;7115:122:11;;4580:2:16;7115:122:11;;;4562:21:16;4619:2;4599:18;;;4592:30;4658:34;4638:18;;;4631:62;-1:-1:-1;;;4709:18:16;;;4702:35;4754:19;;7115:122:11;4378:401:16;7115:122:11;7273:60;7282:5;7289:7;7317:15;7298:16;:34;7273:8;:60::i;3754:234::-;3869:4;736:10:10;3930:28:11;736:10:10;3947:2:11;3951:6;3930:9;:28::i;987:125:13:-;452:10;439:9;:23;;417:110;;;;-1:-1:-1;;;417:110:13;;4986:2:16;417:110:13;;;4968:21:16;5025:2;5005:18;;;4998:30;5064:34;5044:18;;;5037:62;-1:-1:-1;;;5115:18:16;;;5108:35;5160:19;;417:110:13;4784:401:16;417:110:13;1044:15:::1;1062:18;1074:6;1062:9;:18;:::i;:::-;1044:36;;1091:13;1096:7;1091:4;:13::i;4051:201:11:-:0;-1:-1:-1;;;;;4217:18:11;;;4185:7;4217:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4051:201::o;11004:380::-;-1:-1:-1;;;;;11140:19:11;;11132:68;;;;-1:-1:-1;;;11132:68:11;;5517:2:16;11132:68:11;;;5499:21:16;5556:2;5536:18;;;5529:30;5595:34;5575:18;;;5568:62;-1:-1:-1;;;5646:18:16;;;5639:34;5690:19;;11132:68:11;5315:400:16;11132:68:11;-1:-1:-1;;;;;11219:21:11;;11211:68;;;;-1:-1:-1;;;11211:68:11;;5922:2:16;11211:68:11;;;5904:21:16;5961:2;5941:18;;;5934:30;6000:34;5980:18;;;5973:62;-1:-1:-1;;;6051:18:16;;;6044:32;6093:19;;11211:68:11;5720:398:16;11211:68:11;-1:-1:-1;;;;;11292:18:11;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11344:32;;1391:25:16;;;11344:32:11;;1364:18:16;11344:32:11;;;;;;;11004:380;;;:::o;11675:502::-;11810:24;11837:25;11847:5;11854:7;11837:9;:25::i;:::-;11810:52;;-1:-1:-1;;11877:16:11;:37;11873:297;;11977:6;11957:16;:26;;11931:117;;;;-1:-1:-1;;;11931:117:11;;6325:2:16;11931:117:11;;;6307:21:16;6364:2;6344:18;;;6337:30;6403:31;6383:18;;;6376:59;6452:18;;11931:117:11;6123:353:16;11931:117:11;12092:51;12101:5;12108:7;12136:6;12117:16;:25;12092:8;:51::i;7846:877::-;-1:-1:-1;;;;;7977:18:11;;7969:68;;;;-1:-1:-1;;;7969:68:11;;6683:2:16;7969:68:11;;;6665:21:16;6722:2;6702:18;;;6695:30;6761:34;6741:18;;;6734:62;-1:-1:-1;;;6812:18:16;;;6805:35;6857:19;;7969:68:11;6481:401:16;7969:68:11;-1:-1:-1;;;;;8056:16:11;;8048:64;;;;-1:-1:-1;;;8048:64:11;;7089:2:16;8048:64:11;;;7071:21:16;7128:2;7108:18;;;7101:30;7167:34;7147:18;;;7140:62;-1:-1:-1;;;7218:18:16;;;7211:33;7261:19;;8048:64:11;6887:399:16;8048:64:11;-1:-1:-1;;;;;8198:15:11;;8176:19;8198:15;;;;;;;;;;;8246:21;;;;8224:109;;;;-1:-1:-1;;;8224:109:11;;7493:2:16;8224:109:11;;;7475:21:16;7532:2;7512:18;;;7505:30;7571:34;7551:18;;;7544:62;-1:-1:-1;;;7622:18:16;;;7615:36;7668:19;;8224:109:11;7291:402:16;8224:109:11;-1:-1:-1;;;;;8369:15:11;;;:9;:15;;;;;;;;;;;8387:20;;;8369:38;;8587:13;;;;;;;;;;:23;;;;;;8639:26;;1391:25:16;;;8587:13:11;;8639:26;;1364:18:16;8639:26:11;;;;;;;8678:37;12777:125;9010:548;-1:-1:-1;;;;;9094:21:11;;9086:65;;;;-1:-1:-1;;;9086:65:11;;7900:2:16;9086:65:11;;;7882:21:16;7939:2;7919:18;;;7912:30;7978:33;7958:18;;;7951:61;8029:18;;9086:65:11;7698:355:16;9086:65:11;9242:6;9226:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9397:18:11;;:9;:18;;;;;;;;;;;:28;;;;;;9452:37;1391:25:16;;;9452:37:11;;1364:18:16;9452:37:11;;;;;;;9010:548;;:::o;14:597:16:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:16;574:15;-1:-1:-1;;570:29:16;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:16:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:16;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:16:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:16:o;2140:180::-;2199:6;2252:2;2240:9;2231:7;2227:23;2223:32;2220:52;;;2268:1;2265;2258:12;2220:52;-1:-1:-1;2291:23:16;;2140:180;-1:-1:-1;2140:180:16:o;2325:260::-;2393:6;2401;2454:2;2442:9;2433:7;2429:23;2425:32;2422:52;;;2470:1;2467;2460:12;2422:52;2493:29;2512:9;2493:29;:::i;:::-;2483:39;;2541:38;2575:2;2564:9;2560:18;2541:38;:::i;:::-;2531:48;;2325:260;;;;;:::o;2590:380::-;2669:1;2665:12;;;;2712;;;2733:61;;2787:4;2779:6;2775:17;2765:27;;2733:61;2840:2;2832:6;2829:14;2809:18;2806:38;2803:161;;2886:10;2881:3;2877:20;2874:1;2867:31;2921:4;2918:1;2911:15;2949:4;2946:1;2939:15;2803:161;;2590:380;;;:::o;2975:127::-;3036:10;3031:3;3027:20;3024:1;3017:31;3067:4;3064:1;3057:15;3091:4;3088:1;3081:15;3107:128;3147:3;3178:1;3174:6;3171:1;3168:13;3165:39;;;3184:18;;:::i;:::-;-1:-1:-1;3220:9:16;;3107:128::o;3595:127::-;3656:10;3651:3;3647:20;3644:1;3637:31;3687:4;3684:1;3677:15;3711:4;3708:1;3701:15;3727:112;3759:1;3785;3775:35;;3790:18;;:::i;:::-;-1:-1:-1;3824:9:16;;3727:112::o;4205:168::-;4245:7;4311:1;4307;4303:6;4299:14;4296:1;4293:21;4288:1;4281:9;4274:17;4270:45;4267:71;;;4318:18;;:::i;:::-;-1:-1:-1;4358:9:16;;4205:168::o;5190:120::-;5230:1;5256;5246:35;;5261:18;;:::i;:::-;-1:-1:-1;5295:9:16;;5190:120::o",
    "sourcePath": "c:/Users/Neosoft/Desktop/NeoSoft/Assignments/DeFi/Lend_Borrow/contracts/DeFi.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.15+commit.e14f2714"
    },
    "ast": {
        "absolutePath": "c:/Users/Neosoft/Desktop/NeoSoft/Assignments/DeFi/Lend_Borrow/contracts/DeFi.sol",
        "exportedSymbols": {
            "Context": [
                2037
            ],
            "DeFi": [
                2830
            ],
            "ERC20": [
                2617
            ],
            "IERC20": [
                2695
            ],
            "NeoToken": [
                2893
            ]
        },
        "id": 2831,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 2697,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:13"
            },
            {
                "absolutePath": "c:/Users/Neosoft/Desktop/NeoSoft/Assignments/DeFi/Lend_Borrow/contracts/NeoToken.sol",
                "file": "./NeoToken.sol",
                "id": 2698,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 2831,
                "sourceUnit": 2894,
                "src": "59:24:13",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 2700,
                            "name": "NeoToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2893,
                            "src": "187:8:13"
                        },
                        "id": 2701,
                        "nodeType": "InheritanceSpecifier",
                        "src": "187:8:13"
                    }
                ],
                "canonicalName": "DeFi",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 2699,
                    "nodeType": "StructuredDocumentation",
                    "src": "87:81:13",
                    "text": "@title Defi contract where user Lend and Borrow ETH in exchange to NeoToken"
                },
                "fullyImplemented": true,
                "id": 2830,
                "linearizedBaseContracts": [
                    2830,
                    2893,
                    2617,
                    2695,
                    2037
                ],
                "name": "DeFi",
                "nameLocation": "179:4:13",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 2703,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "229:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2830,
                        "src": "221:13:13",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 2702,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "221:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 2719,
                            "nodeType": "Block",
                            "src": "338:37:13",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 2717,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 2714,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2703,
                                            "src": "349:5:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 2715,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "357:3:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 2716,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "357:10:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "349:18:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 2718,
                                    "nodeType": "ExpressionStatement",
                                    "src": "349:18:13"
                                }
                            ]
                        },
                        "id": 2720,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 2710,
                                        "name": "_name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2705,
                                        "src": "317:5:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 2711,
                                        "name": "_symbol",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2707,
                                        "src": "324:7:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    }
                                ],
                                "id": 2712,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 2709,
                                    "name": "NeoToken",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 2893,
                                    "src": "308:8:13"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "308:24:13"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 2708,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 2705,
                                    "mutability": "mutable",
                                    "name": "_name",
                                    "nameLocation": "269:5:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2720,
                                    "src": "255:19:13",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 2704,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "255:6:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2707,
                                    "mutability": "mutable",
                                    "name": "_symbol",
                                    "nameLocation": "290:7:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2720,
                                    "src": "276:21:13",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 2706,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "276:6:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "254:44:13"
                        },
                        "returnParameters": {
                            "id": 2713,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "338:0:13"
                        },
                        "scope": 2830,
                        "src": "243:132:13",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 2735,
                            "nodeType": "Block",
                            "src": "406:141:13",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 2730,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 2723,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "439:3:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 2724,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "439:9:13",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                        "typeString": "int_const 1000000000000000000"
                                                    },
                                                    "id": 2729,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "31",
                                                        "id": 2725,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "452:1:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1_by_1",
                                                            "typeString": "int_const 1"
                                                        },
                                                        "value": "1"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        },
                                                        "id": 2728,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "hexValue": "3130",
                                                            "id": 2726,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "456:2:13",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_10_by_1",
                                                                "typeString": "int_const 10"
                                                            },
                                                            "value": "10"
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "**",
                                                        "rightExpression": {
                                                            "hexValue": "3138",
                                                            "id": 2727,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "460:2:13",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_18_by_1",
                                                                "typeString": "int_const 18"
                                                            },
                                                            "value": "18"
                                                        },
                                                        "src": "456:6:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        }
                                                    },
                                                    "src": "452:10:13",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                        "typeString": "int_const 1000000000000000000"
                                                    }
                                                },
                                                "src": "439:23:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4d696e696d756d206c656e6420616d6f756e742073686f756c642062652031206574686572",
                                                "id": 2731,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "477:39:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_3a50d5446e6c4e20e4c08c54b2b654525258a9a302ae4ed14bfa361d45f62442",
                                                    "typeString": "literal_string \"Minimum lend amount should be 1 ether\""
                                                },
                                                "value": "Minimum lend amount should be 1 ether"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_3a50d5446e6c4e20e4c08c54b2b654525258a9a302ae4ed14bfa361d45f62442",
                                                    "typeString": "literal_string \"Minimum lend amount should be 1 ether\""
                                                }
                                            ],
                                            "id": 2722,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "417:7:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 2732,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "417:110:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 2733,
                                    "nodeType": "ExpressionStatement",
                                    "src": "417:110:13"
                                },
                                {
                                    "id": 2734,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "538:1:13"
                                }
                            ]
                        },
                        "id": 2736,
                        "name": "miniLendETH",
                        "nameLocation": "392:11:13",
                        "nodeType": "ModifierDefinition",
                        "parameters": {
                            "id": 2721,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "403:2:13"
                        },
                        "src": "383:164:13",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 2760,
                            "nodeType": "Block",
                            "src": "594:256:13",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 2746,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 2742,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "637:3:13",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 2743,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "637:10:13",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 2741,
                                                        "name": "balanceOf",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2129,
                                                        "src": "627:9:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                            "typeString": "function (address) view returns (uint256)"
                                                        }
                                                    },
                                                    "id": 2744,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "627:21:13",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "id": 2745,
                                                    "name": "_tokenAmnt",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2738,
                                                    "src": "652:10:13",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "627:35:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "546f6b656e20616d6f756e74206c657373207468616e20313030",
                                                "id": 2747,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "677:28:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_f8ed674503ab630753a77e151142b1680d23e7211607de66a3f2ef863ec2870e",
                                                    "typeString": "literal_string \"Token amount less than 100\""
                                                },
                                                "value": "Token amount less than 100"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_f8ed674503ab630753a77e151142b1680d23e7211607de66a3f2ef863ec2870e",
                                                    "typeString": "literal_string \"Token amount less than 100\""
                                                }
                                            ],
                                            "id": 2740,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "605:7:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 2748,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "605:111:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 2749,
                                    "nodeType": "ExpressionStatement",
                                    "src": "605:111:13"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 2755,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 2753,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 2751,
                                                        "name": "_tokenAmnt",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2738,
                                                        "src": "749:10:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "%",
                                                    "rightExpression": {
                                                        "hexValue": "313030",
                                                        "id": 2752,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "762:3:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                        },
                                                        "value": "100"
                                                    },
                                                    "src": "749:16:13",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 2754,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "769:1:13",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "749:21:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "546f6b656e206d75737420626520696e206d756c7469706c65206f6620313030",
                                                "id": 2756,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "785:34:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b245ff3812845864005d83fe96b1c174c09fd1a63918949ed8ab56339ece5833",
                                                    "typeString": "literal_string \"Token must be in multiple of 100\""
                                                },
                                                "value": "Token must be in multiple of 100"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b245ff3812845864005d83fe96b1c174c09fd1a63918949ed8ab56339ece5833",
                                                    "typeString": "literal_string \"Token must be in multiple of 100\""
                                                }
                                            ],
                                            "id": 2750,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "727:7:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 2757,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "727:103:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 2758,
                                    "nodeType": "ExpressionStatement",
                                    "src": "727:103:13"
                                },
                                {
                                    "id": 2759,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "841:1:13"
                                }
                            ]
                        },
                        "id": 2761,
                        "name": "miniToken",
                        "nameLocation": "564:9:13",
                        "nodeType": "ModifierDefinition",
                        "parameters": {
                            "id": 2739,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 2738,
                                    "mutability": "mutable",
                                    "name": "_tokenAmnt",
                                    "nameLocation": "582:10:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2761,
                                    "src": "574:18:13",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 2737,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "574:7:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "573:20:13"
                        },
                        "src": "555:295:13",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 2780,
                            "nodeType": "Block",
                            "src": "1033:79:13",
                            "statements": [
                                {
                                    "assignments": [
                                        2768
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 2768,
                                            "mutability": "mutable",
                                            "name": "NeoAmnt",
                                            "nameLocation": "1052:7:13",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2780,
                                            "src": "1044:15:13",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2767,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1044:7:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 2775,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 2774,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 2769,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "1062:3:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 2770,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "value",
                                            "nodeType": "MemberAccess",
                                            "src": "1062:9:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_rational_10000000000000000_by_1",
                                                "typeString": "int_const 10000000000000000"
                                            },
                                            "id": 2773,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "hexValue": "3130",
                                                "id": 2771,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1074:2:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                                "hexValue": "3136",
                                                "id": 2772,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1078:2:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_16_by_1",
                                                    "typeString": "int_const 16"
                                                },
                                                "value": "16"
                                            },
                                            "src": "1074:6:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10000000000000000_by_1",
                                                "typeString": "int_const 10000000000000000"
                                            }
                                        },
                                        "src": "1062:18:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1044:36:13"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 2777,
                                                "name": "NeoAmnt",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2768,
                                                "src": "1096:7:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 2776,
                                            "name": "mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2892,
                                            "src": "1091:4:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 2778,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1091:13:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 2779,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1091:13:13"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 2762,
                            "nodeType": "StructuredDocumentation",
                            "src": "854:127:13",
                            "text": "@notice User can lend their ETH in Exchange of NeoToken - 1 ETH == 100 NeoToken\n @dev user have to lend minimum 1 ETH"
                        },
                        "functionSelector": "d16d3df1",
                        "id": 2781,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 2765,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 2764,
                                    "name": "miniLendETH",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 2736,
                                    "src": "1021:11:13"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1021:11:13"
                            }
                        ],
                        "name": "lendETH",
                        "nameLocation": "996:7:13",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 2763,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1003:2:13"
                        },
                        "returnParameters": {
                            "id": 2766,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1033:0:13"
                        },
                        "scope": 2830,
                        "src": "987:125:13",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 2815,
                            "nodeType": "Block",
                            "src": "1320:152:13",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 2793,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "1348:4:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_DeFi_$2830",
                                                            "typeString": "contract DeFi"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_DeFi_$2830",
                                                            "typeString": "contract DeFi"
                                                        }
                                                    ],
                                                    "id": 2792,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1340:7:13",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 2791,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1340:7:13",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 2794,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1340:13:13",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 2795,
                                                "name": "_tokenAmnt",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2784,
                                                "src": "1355:10:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 2790,
                                            "name": "transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2154,
                                            "src": "1331:8:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 2796,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1331:35:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 2797,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1331:35:13"
                                },
                                {
                                    "assignments": [
                                        2799
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 2799,
                                            "mutability": "mutable",
                                            "name": "EthValue",
                                            "nameLocation": "1385:8:13",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2815,
                                            "src": "1377:16:13",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 2798,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1377:7:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 2805,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 2804,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 2800,
                                            "name": "_tokenAmnt",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2784,
                                            "src": "1396:10:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_rational_10000000000000000_by_1",
                                                "typeString": "int_const 10000000000000000"
                                            },
                                            "id": 2803,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "hexValue": "3130",
                                                "id": 2801,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1409:2:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                                "hexValue": "3136",
                                                "id": 2802,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1413:2:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_16_by_1",
                                                    "typeString": "int_const 16"
                                                },
                                                "value": "16"
                                            },
                                            "src": "1409:6:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10000000000000000_by_1",
                                                "typeString": "int_const 10000000000000000"
                                            }
                                        },
                                        "src": "1396:19:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1377:38:13"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 2812,
                                                "name": "EthValue",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2799,
                                                "src": "1455:8:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 2808,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "1434:3:13",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 2809,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "1434:10:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 2807,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1426:8:13",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 2806,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1426:8:13",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 2810,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1426:19:13",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 2811,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "1426:28:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 2813,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1426:38:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 2814,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1426:38:13"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 2782,
                            "nodeType": "StructuredDocumentation",
                            "src": "1116:130:13",
                            "text": "@notice User can borrow their ETH in Exchange of NeoToken.\n @dev user have to borrow ETH in the multiple of 100 NeoToken"
                        },
                        "functionSelector": "7b2af625",
                        "id": 2816,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 2787,
                                        "name": "_tokenAmnt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2784,
                                        "src": "1308:10:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 2788,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 2786,
                                    "name": "miniToken",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 2761,
                                    "src": "1298:9:13"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1298:21:13"
                            }
                        ],
                        "name": "borrowETH",
                        "nameLocation": "1261:9:13",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 2785,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 2784,
                                    "mutability": "mutable",
                                    "name": "_tokenAmnt",
                                    "nameLocation": "1279:10:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2816,
                                    "src": "1271:18:13",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 2783,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1271:7:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1270:20:13"
                        },
                        "returnParameters": {
                            "id": 2789,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1320:0:13"
                        },
                        "scope": 2830,
                        "src": "1252:220:13",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 2828,
                            "nodeType": "Block",
                            "src": "1598:47:13",
                            "statements": [
                                {
                                    "expression": {
                                        "expression": {
                                            "arguments": [
                                                {
                                                    "id": 2824,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "1624:4:13",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_DeFi_$2830",
                                                        "typeString": "contract DeFi"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_DeFi_$2830",
                                                        "typeString": "contract DeFi"
                                                    }
                                                ],
                                                "id": 2823,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1616:7:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 2822,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1616:7:13",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 2825,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1616:13:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "id": 2826,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "balance",
                                        "nodeType": "MemberAccess",
                                        "src": "1616:21:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 2821,
                                    "id": 2827,
                                    "nodeType": "Return",
                                    "src": "1609:28:13"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 2817,
                            "nodeType": "StructuredDocumentation",
                            "src": "1476:68:13",
                            "text": "@notice User can get the balance of DeFi contract ETH balance."
                        },
                        "functionSelector": "25caa262",
                        "id": 2829,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getBal",
                        "nameLocation": "1559:6:13",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 2818,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1565:2:13"
                        },
                        "returnParameters": {
                            "id": 2821,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 2820,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2829,
                                    "src": "1589:7:13",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 2819,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1589:7:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1588:9:13"
                        },
                        "scope": 2830,
                        "src": "1550:95:13",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 2831,
                "src": "170:1478:13",
                "usedErrors": []
            }
        ],
        "src": "32:1618:13"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "borrowETH(uint256)": "7b2af625",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "getBal()": "25caa262",
        "increaseAllowance(address,uint256)": "39509351",
        "lendETH()": "d16d3df1",
        "mint(uint256)": "a0712d68",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "632800",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24647",
            "balanceOf(address)": "2563",
            "borrowETH(uint256)": "infinite",
            "decimals()": "244",
            "decreaseAllowance(address,uint256)": "26972",
            "getBal()": "239",
            "increaseAllowance(address,uint256)": "27067",
            "lendETH()": "infinite",
            "mint(uint256)": "50784",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2349",
            "transfer(address,uint256)": "51090",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}